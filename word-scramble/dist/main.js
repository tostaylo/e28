(()=>{"use strict";var t=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{directives:[{name:"show",rawName:"v-show",value:t.guesses.length>0,expression:"guesses.length > 0"}]},[s("span",{class:{won:t.gameState.won,lost:!t.gameState.won}},[t._t("default")],2),t._v(" "),s("button",{directives:[{name:"show",rawName:"v-show",value:t.gameState.won||t.gameState.lost,expression:"gameState.won || gameState.lost"}],on:{click:function(e){return t.$emit("reset-state")}}},[t._v("\n    Play again\n  ")])])};t._withStripped=!0;var e=function(t,e,s,n,a,i,o,r){var u,l="function"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=[],l._compiled=!0),u)if(l.functional){l._injectStyles=u;var m=l.render;l.render=function(t,e){return u.call(e),m(t,e)}}else{var g=l.beforeCreate;l.beforeCreate=g?[].concat(g,u):[u]}return{exports:t,options:l}}({props:["gameState","guesses"]},t);e.options.__file="src/components/GuessMessage.vue";const s=e.exports;new Vue({el:"#app",data:function(){return this.initialState()},components:{"guess-message":s},methods:{startGame(){this.name=this.inputVal,this.inputVal=""},submitGuess(){this.guesses.push(this.inputVal),this.inputVal==this.mysteryWords[0][0]?this.gameState={won:!0,lost:!1}:this.guesses.length>2&&(this.gameState={won:!1,lost:!0}),this.inputVal=""},initialState:()=>({inputVal:"",name:"",mysteryWords:[["howdy","this is a howdy hint"]],gameState:{won:null,lost:null},guesses:[]}),resetState(){Object.assign(this.$data,this.initialState())}},computed:{label:function(){return this.name?"Guess Word":"Name"},submitFn:function(){return this.name?this.submitGuess:this.startGame},guessMessage:function(){return this.gameState.won?"You Won":"Please Try Again"}},template:'\n\t\t\t\t\t<div class="main">\n\t\t\t\t\t  <h1>Word Scramble</h1>\n\t\t\t\t\t  <div v-if="name">\n\t\t\t\t\t      <p> Welcome {{name}}</p>\n\t\t\t\t\t      <div><strong>{{mysteryWords[0][0]}}</strong></div>\n\t\t\t\t\t      <p>{{mysteryWords[0][1]}}</p>\n\t\t\t\t\t  </div>\n\t\t\t\t\t      <label>{{label}}\n\t\t\t\t\t        <input v-show="gameState.won === null || gameState.lost === null" type="text" v-on:keyup.enter="submitFn" v-model="inputVal"/>\n\t\t\t\t\t      </label>\n\t\t\t      <guess-message\n              v-on:reset-state=\'resetState\' \n              v-bind:gameState=\'gameState\' \n              v-bind:guesses=\'guesses\'\n            >\n            {{guessMessage}}\n            </guess-message>\n\t\t\t\t\t</div>'})})();